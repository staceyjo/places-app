{"ast":null,"code":"var _jsxFileName = \"/Users/corcoding/Desktop/software_classwork/W11D8/frontend/src/places/pages/UpdatePlace.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/utilities/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Stone Mountain',\n  description: '16 miles east of Atlanta, a quartz monzonite dome monadnock surrounded by 3200 acres of natural beauty!',\n  imageUrl: 'https://img1.10bestmedia.com/Images/Photos/6617/p-StoneMountain_55_660x440_201404181445.jpg',\n  address: '1000 Robert E Lee Blvd, Stone Mountain, GA 30083',\n  location: {\n    lat: 33.8053189,\n    lng: -84.1455315\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\nconst UpdatePlace = () => {\n  _s();\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  if (!identifiedPlace) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not find place!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: () => {},\n      value: identifiedPlace.title,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\",\n      onInput: () => {},\n      value: identifiedPlace.description,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePlace, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePlace;\nexport default UpdatePlace;\nvar _c;\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","identifiedPlace","find","p"],"sources":["/Users/corcoding/Desktop/software_classwork/W11D8/frontend/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React from \"react\"\n\nimport { useParams } from \"react-router-dom\"\n\nimport Input from \"../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/utilities/validators\"\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Stone Mountain',\n        description: '16 miles east of Atlanta, a quartz monzonite dome monadnock surrounded by 3200 acres of natural beauty!',\n        imageUrl: 'https://img1.10bestmedia.com/Images/Photos/6617/p-StoneMountain_55_660x440_201404181445.jpg',\n        address: '1000 Robert E Lee Blvd, Stone Mountain, GA 30083',\n        location: {\n            lat: 33.8053189,\n            lng: -84.1455315\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Empire State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n    }\n];\n\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId)\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <h2>Could not find place!</h2>\n            </div>\n        )\n\n    }\n\n    return (\n        <form>\n            <Input\n                id=\"title\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title.\"\n                onInput={() => { }}\n                value={identifiedPlace.title}\n                valid={true}\n            />\n\n            <Input\n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Please enter a valid description (at least 5 characters).\"\n                onInput={() => { }}\n                value={identifiedPlace.description}\n                valid={true}\n            />\n\n            <Button type=\"submit\" disabled={true}></Button>\n\n        </form>\n    )\n}\n\nexport default UpdatePlace"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,KAAK,MAAM,kDAAkD;AACpE,OAAOC,MAAM,MAAM,oDAAoD;AACvE,SAASC,iBAAiB,EAAEC,mBAAmB,QAAQ,mCAAmC;AAAA;AAE1F,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,gBAAgB;EACvBC,WAAW,EAAE,yGAAyG;EACtHC,QAAQ,EAAE,6FAA6F;EACvGC,OAAO,EAAE,kDAAkD;EAC3DC,QAAQ,EAAE;IACNC,GAAG,EAAE,UAAU;IACfC,GAAG,EAAE,CAAC;EACV,CAAC;EACDC,OAAO,EAAE;AACb,CAAC,EACD;EACIR,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,mDAAmD;EAChEC,QAAQ,EAAE,6HAA6H;EACvIC,OAAO,EAAE,kCAAkC;EAC3CC,QAAQ,EAAE;IACNC,GAAG,EAAE,UAAU;IACfC,GAAG,EAAE,CAAC;EACV,CAAC;EACDC,OAAO,EAAE;AACb,CAAC,CACJ;AAGD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,OAAO,GAAGhB,SAAS,EAAE,CAACgB,OAAO;EAEnC,MAAMC,eAAe,GAAGZ,YAAY,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKU,OAAO,CAAC;EAEhE,IAAI,CAACC,eAAe,EAAE;IAClB,oBACI;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACnB;QAAA,UAAI;MAAqB;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAC5B;EAGd;EAEA,oBACI;IAAA,wBACI,QAAC,KAAK;MACF,EAAE,EAAC,OAAO;MACV,OAAO,EAAC,OAAO;MACf,IAAI,EAAC,MAAM;MACX,KAAK,EAAC,OAAO;MACb,UAAU,EAAE,CAACd,iBAAiB,EAAE,CAAE;MAClC,SAAS,EAAC,6BAA6B;MACvC,OAAO,EAAE,MAAM,CAAE,CAAE;MACnB,KAAK,EAAEc,eAAe,CAACV,KAAM;MAC7B,KAAK,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QACd,eAEF,QAAC,KAAK;MACF,EAAE,EAAC,aAAa;MAChB,OAAO,EAAC,UAAU;MAClB,KAAK,EAAC,aAAa;MACnB,UAAU,EAAE,CAACH,mBAAmB,CAAC,CAAC,CAAC,CAAE;MACrC,SAAS,EAAC,2DAA2D;MACrE,OAAO,EAAE,MAAM,CAAE,CAAE;MACnB,KAAK,EAAEa,eAAe,CAACT,WAAY;MACnC,KAAK,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QACd,eAEF,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,QAAQ,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QAE5C;AAEf,CAAC;AAAA,GA3CKO,WAAW;EAAA,QACGf,SAAS;AAAA;AAAA,KADvBe,WAAW;AA6CjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}