{"ast":null,"code":"var _jsxFileName = \"/Users/corcoding/Desktop/software_classwork/W11D8/frontend/src/places/pages/UpdatePlace.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/utilities/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Stone Mountain',\n  description: '16 miles east of Atlanta, a quartz monzonite dome monadnock surrounded by 3200 acres of natural beauty!',\n  imageUrl: 'https://img1.10bestmedia.com/Images/Photos/6617/p-StoneMountain_55_660x440_201404181445.jpg',\n  address: '1000 Robert E Lee Blvd, Stone Mountain, GA 30083',\n  location: {\n    lat: 33.8053189,\n    lng: -84.1455315\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the most famous sky scrapers in the world!',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\nconst UpdatePlace = () => {\n  _s();\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    setFormData({\n      title: {\n        value: identifiedPlace.title,\n        isValid: true\n      },\n      description: {\n        value: identifiedPlace.description,\n        isValid: true\n      }\n    }, true);\n  }, [setFormData, identifiedPlace]);\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n  if (!identifiedPlace) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not find place!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n  return formState.inputs.title.value && /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler,\n      initialValue: formState.inputs.title.value,\n      initialValid: formState.inputs.title.isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (min. 5 characters).\",\n      onInput: inputHandler,\n      initialValue: formState.inputs.description.value,\n      initialValid: formState.inputs.description.isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"UPDATE PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 45\n  }, this);\n};\n_s(UpdatePlace, \"gBolniKyZ5kyndr2HB68Ho4KJxo=\", false, function () {\n  return [useParams, useForm];\n});\n_c = UpdatePlace;\nexport default UpdatePlace;\nvar _c;\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useEffect","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","formState","inputHandler","setFormData","value","isValid","identifiedPlace","find","p","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"sources":["/Users/corcoding/Desktop/software_classwork/W11D8/frontend/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect } from \"react\"\n\nimport { useParams } from \"react-router-dom\"\n\nimport Input from \"../../shared/components/FormElements/Input/Input\";\nimport Button from \"../../shared/components/FormElements/Button/Button\";\n\nimport {\n    VALIDATOR_REQUIRE,\n    VALIDATOR_MINLENGTH\n} from \"../../shared/utilities/validators\"\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\n\nimport \"./PlaceForm.css\"\n\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Stone Mountain',\n        description: '16 miles east of Atlanta, a quartz monzonite dome monadnock surrounded by 3200 acres of natural beauty!',\n        imageUrl:\n            'https://img1.10bestmedia.com/Images/Photos/6617/p-StoneMountain_55_660x440_201404181445.jpg',\n        address: '1000 Robert E Lee Blvd, Stone Mountain, GA 30083',\n        location: {\n            lat: 33.8053189,\n            lng: -84.1455315\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Empire State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n    }\n];\n\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n\n    const [formState, inputHandler, setFormData] = useForm({\n        title: {\n            value: \"\",\n            isValid: false\n        },\n        description: {\n            value: \"\",\n            isValid: false\n        }\n    }, false)\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n    useEffect(() => {\n        setFormData({\n            title: {\n                value: identifiedPlace.title,\n                isValid: true\n            },\n            description: {\n                value: identifiedPlace.description,\n                isValid: true\n\n            }\n        }, true)\n\n    }, [setFormData, identifiedPlace])\n\n\n\n    const placeUpdateSubmitHandler = event => {\n        event.preventDefault()\n        console.log(formState.inputs)\n    }\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <h2>Could not find place!</h2>\n            </div>\n        );\n    }\n\n    return (\n        \n            formState.inputs.title.value && <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n                <Input\n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Title\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter a valid title.\"\n                    onInput={inputHandler}\n                    initialValue={formState.inputs.title.value}\n                    initialValid={formState.inputs.title.isValid}\n                />\n                <Input\n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid description (min. 5 characters).\"\n                    onInput={inputHandler}\n                    initialValue={formState.inputs.description.value}\n                    initialValid={formState.inputs.description.isValid}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    UPDATE PLACE\n                </Button>\n            </form>\n        \n    );\n};\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}